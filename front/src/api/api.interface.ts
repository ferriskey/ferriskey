/*
 Generated by typeshare 1.13.2
*/

export interface AuthResponse {
	url: string;
}

export interface AuthenticateQueryParams {
	client_id: string;
}

export interface AuthenticateRequest {
	username?: string;
	password?: string;
}

export interface AuthenticateResponse {
	url: string;
}

export interface Client {
	id: string;
	enabled: boolean;
	client_id: string;
	secret?: string;
	realm_id: string;
	protocol: string;
	public_client: boolean;
	service_account_enabled: boolean;
	client_type: string;
	name: string;
	created_at: Date;
	updated_at: Date;
}

export interface ClientsResponse {
	data: Client[];
}

export interface CreateRoleDto {
	name: string;
	description?: string;
	permissions: number;
	realm_id: string;
	client_id: string;
}

export interface CreateRoleValidator {
	name: string;
	description?: string;
	permissions: number;
}

export interface Role {
	id: string;
	name: string;
	description?: string;
	permissions: number;
	realm_id: string;
	client_id: string;
	client?: Client;
	created_at: Date;
	updated_at: Date;
}

export interface GetRolesResponse {
	data: Role[];
}

export interface JwtToken {
	access_token: string;
	token_type: string;
	refresh_token: string;
	expires_in: number;
	id_token: string;
}

export interface Realm {
	id: string;
	name: string;
	created_at: Date;
	updated_at: Date;
}

export enum GrantType {
	Code = "authorization_code",
	Password = "password",
	Credentials = "client_credentials",
	RefreshToken = "refresh_token",
}

export interface TokenRequestValidator {
	grant_type?: GrantType;
	client_id?: string;
	client_secret?: string;
	code?: string;
	username?: string;
	password?: string;
	refresh_token?: string;
}

export interface User {
	id: string;
	realm_id: string;
	client_id: string;
	username: string;
	firstname: string;
	lastname: string;
	email: string;
	email_verified: boolean;
	enabled: boolean;
	roles: Role[];
	realm?: Realm;
	created_at: Date;
	updated_at: Date;
}

export interface UserRealmsResponse {
	data: Realm[];
}

export interface UsersResponse {
	data: User[];
}

export enum Permissions {
	CreateClient = "CreateClient",
	ManageAuthorization = "ManageAuthorization",
	ManageClients = "ManageClients",
	ManageEvents = "ManageEvents",
	ManageIdentityProviders = "ManageIdentityProviders",
	ManageRealm = "ManageRealm",
	ManageUsers = "ManageUsers",
	QueryClients = "QueryClients",
	QueryGroups = "QueryGroups",
	QueryRealms = "QueryRealms",
	QueryUsers = "QueryUsers",
	ViewAuthorization = "ViewAuthorization",
	ViewClients = "ViewClients",
	ViewEvents = "ViewEvents",
	ViewIdentityProviders = "ViewIdentityProviders",
	ViewRealm = "ViewRealm",
	ViewUsers = "ViewUsers",
}

