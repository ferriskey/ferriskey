name: docker

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      push:
        type: boolean
        default: false
        description: "Whether to push the image"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ${{ matrix.runner.name }}
    strategy:
      matrix:
        runner:
          - name: ubuntu-24.04
            platform: linux/amd64
          - name: ubuntu-24.04-arm
            platform: linux/arm64
        target:
          - api
          - operator
          - webapp
    steps:
      - name: checkout
        uses: actions/checkout@v5

      - name: set up builx
        uses: docker/setup-buildx-action@v3

      - name: cache layers
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}/.buildx-cache
          key: buildx-${{ runner.arch }}-${{ matrix.target }}-${{ github.sha }}
          restore-keys: |
            buildx-${{ runner.arch }}-${{ matrix.target }}-

      - name: get image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/ferriskey/ferriskey-${{ matrix.target }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=ref,event=pr
            type=sha

      - name: log-in to ghcr
        if: ${{ inputs.push == true }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          target: ${{ matrix.target }}
          platforms: ${{ matrix.runner.platform }}
          push: ${{ inputs.push == true }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          cache-from: type=local,src=${{ runner.temp }}/.buildx-cache
          cache-to: type=local,dest=${{ runner.temp }}/.buildx-cache-new,mode=max
          provenance: false
          sbom: false

      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: move cache
        run: |
          rm -rf ${{ runner.temp }}/.buildx-cache
          mv ${{ runner.temp }}/.buildx-cache-new ${{ runner.temp }}/.buildx-cache
